const {admin,db} = require('./admin');
module.exports =  (req,res,next)=>{ //verifies
    let idToken;
    if(req.headers.authorization && req.headers.authorization.startsWith('Bearer ')){//Bearer authentication” can be understood as “give access to the bearer of this token.” The bearer token is a cryptic string, usually generated by the server in response to a login request
        idToken = req.headers.authorization.split('Bearer ')[1]; //split a sting by other string  give bac 2 string bear and token 
    }else{
        console.error('No token found') // if does not start with bear do not give access
        return res.status(403).json({error: 'Unauthorized'});
}

admin
.auth()
.verifyIdToken(idToken)// verify this token was given by us
.then(decodedToken =>{ // retun decoded token promise
    req.user = decodedToken;// will have extra data
    console.log(decodedToken)
    return db
    .collection('user')// this the handle added to decoded token
    .where('userId', '==', req.user.uid)
    .limit(1)
    .get();
})
.then(data =>{
    req.user.handle = data.docs[0].data().handle;
    req.user.imageUrl = data.docs[0].data().imageUrl;
    return next();
})
.catch(err =>{
    console.error('Error while verifying token', err)
    return res.status(403).json(err);
})
}